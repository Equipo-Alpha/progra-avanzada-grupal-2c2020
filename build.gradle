plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'jacoco'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

group 'EquipoAlpha'

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.0'

    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.4.24.Final'
    compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: '1.0.2.Final'
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.32.3.2'
    compile group: 'com.github.gwenn', name: 'sqlite-dialect', version: '0.1.0'
}

shadowJar {
    mergeServiceFiles()
}

task clienteJar (type: Jar, dependsOn: shadowJar) {
    manifest {
        attributes 'Main-Class': 'equipoalpha.loveletter.client.LoveLetter'
    }
    archiveBaseName.set('EquipoAlpha-LoveLetter')
    archiveClassifier.set('Cliente')
    archiveVersion.set('')
    from zipTree(shadowJar.archiveFile)
}

task servidorJar(type: Jar, dependsOn: shadowJar) {
    manifest {
        attributes 'Main-Class': 'equipoalpha.loveletter.server.LoveLetterServidor'
    }
    archiveBaseName.set('EquipoAlpha-LoveLetter')
    archiveClassifier.set('Servidor')
    archiveVersion.set('')
    from zipTree(shadowJar.archiveFile)
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude:  [
                    'equipoalpha/loveletter/pantalla/**',
                    'equipoalpha/loveletter/common/**',
                    'equipoalpha/loveletter/client/**',
                    'equipoalpha/loveletter/server/**',
                    'equipoalpha/loveletter/util/**',
                    'equipoalpha/loveletter/jugador/JugadorIA.class'
            ])
        }))
    }
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/JacocoReportDir/jacocoHtml")
    }
}

jacoco {
    toolVersion = "0.8.6"
    reportsDir = file("$buildDir/JacocoReportDir")
}
