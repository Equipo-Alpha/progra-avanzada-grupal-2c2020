buildscript {
    dependencies {
        classpath 'org.kohsuke:github-api:1.114'
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

def ENV = System.getenv()
def version = "0.2.0." + (ENV.GITHUB_RUN_NUMBER ? "" : "dev")

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

group 'EquipoAlpha'

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
}

jar {
    manifest {
        attributes 'Main-Class': 'equipoalpha.loveletter.LoveLetter'
    }
    archiveBaseName.set('EquipoAlpha-LoveLetter')
    archiveClassifier.set('prev')
    archiveVersion.set(version)
}

import org.kohsuke.github.GHReleaseBuilder
import org.kohsuke.github.GitHub

task github() {
    onlyIf {
        ENV.GITHUB_TOKEN
    }

    doLast {
        def github = GitHub.connectUsingOAuth(ENV.GITHUB_TOKEN as String)
        def repository = github.getRepository("Equipo-Alpha/progra-avanzada-grupal-2c2020")

        def releaseBuilder = new GHReleaseBuilder(repository, version as String)
        releaseBuilder.name("LoveLetter Equipo-Alpha Version ${version} build $ENV.BUILD_NUMBER")

        def ghRelease = releaseBuilder.create()
        ghRelease.uploadAsset(file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar"), "application/java-archive");
    }
}
